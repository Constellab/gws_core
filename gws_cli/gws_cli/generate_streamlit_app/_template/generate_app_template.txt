from gws_core import (ConfigParams, Dashboard, DashboardType, OutputSpec,
                      OutputSpecs, StreamlitResource, Task, TaskInputs,
                      TaskOutputs, dashboard_decorator, task_decorator, 
                      InputSpecs, ConfigSpecs)


@dashboard_decorator("{{dashboardClass}}", dashboard_type=DashboardType.STREAMLIT,
                     human_name="Generate show case app")
class {{dashboardClass}}(Dashboard):

    # retrieve the path of the app folder, relative to this file
    # the dashboard code folder starts with a underscore to avoid being loaded when the brick is loaded
    def get_app_folder_path(self):
        return self.get_app_folder_from_relative(__file__, "{{folderAppName}}")


@task_decorator("{{generateClass}}", human_name="Generate {{name}} app",
                style=StreamlitResource.copy_style())
class {{generateClass}}(Task):
    """
    Task that generates the {{name}} app.
    """

    input_specs = InputSpecs()
    output_specs = OutputSpecs({
        'streamlit_app': OutputSpec(StreamlitResource)
    })

    config_specs = ConfigSpecs({})

    def run(self, params: ConfigParams, inputs: TaskInputs) -> TaskOutputs:
        """ Run the task """

        streamlit_app = StreamlitResource()

        streamlit_app.set_dashboard({{dashboardClass}}())
        streamlit_app.name = "{{name}}"

        return {"streamlit_app": streamlit_app}

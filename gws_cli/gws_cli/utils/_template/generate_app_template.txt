from gws_core import (ConfigParams, AppConfig, AppType, OutputSpec,
                      OutputSpecs, {{appTypeResource}}, Task, TaskInputs,
                      TaskOutputs, app_decorator, task_decorator, 
                      InputSpecs, ConfigSpecs)


@app_decorator("{{appClass}}", app_type=AppType.{{appType}},
               human_name="Generate {{name}} app")
class {{appClass}}(AppConfig):

    # retrieve the path of the app folder, relative to this file
    # the app code folder starts with a underscore to avoid being loaded when the brick is loaded
    def get_app_folder_path(self):
        return self.get_app_folder_from_relative_path(__file__, "{{folderAppName}}")


@task_decorator("{{generateClass}}", human_name="Generate {{name}} app",
                style={{appTypeResource}}.copy_style())
class {{generateClass}}(Task):
    """
    Task that generates the {{name}} app.
    """

    input_specs = InputSpecs()
    output_specs = OutputSpecs({
        '{{appTypeVar}}': OutputSpec({{appTypeResource}})
    })

    config_specs = ConfigSpecs({})

    def run(self, params: ConfigParams, inputs: TaskInputs) -> TaskOutputs:
        """ Run the task """

        {{appTypeVar}} = {{appTypeResource}}()

        {{appTypeVar}}.set_app_config({{appClass}}())
        {{appTypeVar}}.name = "{{name}}"

        return {"{{appTypeVar}}": {{appTypeVar}}}
